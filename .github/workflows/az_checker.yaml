# Workflow name
name: Check Library A-Z Broken Links

# Trigger conditions
on:
  schedule:
    - cron: '0 1 * * 1'  # Run weekly on Mon at 01:00
  workflow_dispatch:  # Allow manual triggering

# Permissions
permissions:
  contents: write  # Add explicit permission to write to repository

# Jobs
jobs:
  check_links:
    runs-on: ubuntu-latest
    
    steps:
    # Checkout the repository
    - uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}  # Use Github token for authentication

    # Set up Node.js environment
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    # Cache Node.js modules for faster builds
    - name: Cache Node.js modules
      uses: actions/cache@v4
      with:
        path: ~/.npm
        key: ${{ runner.OS }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.OS }}-node-
    
    # Install linkinator globally
    - name: Install dependencies
      run: npm install linkinator -g
    
    # Create a directory for reports
    - name: Create reports directory
      run: mkdir -p reports
    
    # Run linkinator to check for broken links
    - name: Check for broken links
      run: |
        DATE=$(date +'%Y-%m-%d')
        REPORT_FILE="reports/lib-AZ-links-report-$DATE.csv"
        linkinator "${{ secrets.AZ_URL }}" --recurse --format CSV > $REPORT_FILE
        echo "REPORT_FILE=$REPORT_FILE" >> $GITHUB_ENV
      continue-on-error: true
    
    # Check if any 404 errors were found in the report
    - name: Check if broken links were found
      id: check_broken_links
      run: |
        if grep -q "404" "${{ env.REPORT_FILE }}"; then
          echo "broken_links_found=true" >> $GITHUB_OUTPUT
          echo "STATUS_MESSAGE=Broken 404 links have been detected on the Library A-Z. Please check attached report for all link details." >> $GITHUB_ENV
        else
          echo "broken_links_found=false" >> $GITHUB_OUTPUT
          echo "STATUS_MESSAGE=No 404 broken links found. Please check attached report for all link details." >> $GITHUB_ENV
        fi
    
    # Commit the report to the repository
    - name: Commit report to repository
      if: always()
      run: |
        git config --local user.email "github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"
        git add "${{ env.REPORT_FILE }}"
        if git diff --staged --quiet; then
          echo "No changes to commit"
        else
          git commit -m "Add links report for $(date +'%Y-%m-%d')"
          git push origin HEAD:${GITHUB_REF}
        fi
  
    # Upload the report as an artifact
    - name: Upload links report
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: links-report
        path: ${{ env.REPORT_FILE }}
    
    # Send email notification with the report
    - name: Send email notification
      id: send_email
      if: always()
      uses: dawidd6/action-send-mail@v3
      with:
        # Required mail server settings:
        server_address: smtp.gmail.com
        server_port: 465
        # Credentials
        username: ${{secrets.GMAIL_USERNAME}}
        password: ${{secrets.GMAIL_PASSWORD}}
        # Email subject
        subject: ${{ steps.check_broken_links.outputs.broken_links_found == 'true' && 'Broken Links Found on Library A-Z website' || 'No Broken Links Found on Library A-Z website' }}
        body: ${{ env.STATUS_MESSAGE }}
        attachments: ${{ env.REPORT_FILE }}
        # Recipient email address
        to: ${{secrets.EMAIL_RECIPIENT}}
        # Sender email address 
        from: Alistair Bailey ${{secrets.EMAIL_SENDER}}
        priority: normal
        # Optional whether this connection use TLS (default is true if server_port is 465)
        secure: true
      env:
        STATUS_MESSAGE: ${{ env.STATUS_MESSAGE }}
