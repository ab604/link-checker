name: Library A-Z Link Checker

on:
  schedule:
    - cron: '0 0 * * 0'  # Run weekly on Sundays at midnight UTC
  workflow_dispatch:  # Allow manual triggering

permissions:
    contents: write  # Add explicit permission to write to repository  

jobs:
  linkchecker:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}  # Use Github token for authentication

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'

    - name: Cache pip packages
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Cache Playwright browsers
      uses: actions/cache@v4
      with:
        path: ~/.cache/ms-playwright
        key: ${{ runner.os }}-playwright-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-playwright-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install playwright aiohttp beautifulsoup4 aiohttp_retry tenacity
        
    - name: Install Playwright browsers (if not cached)
      run: |
        # Only install if the browser binary doesn't exist
        if [ ! -d ~/.cache/ms-playwright/chromium-* ]; then
          playwright install chromium
          playwright install-deps chromium
        fi
      
    - name: Run Get Links
      run: python get-az-links.py

    # Commit links list to the repository
    - name: Commit links list to repository
      if: always()
      run: |
        git config --local user.email "github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"
        git add "${{ env.LINKS_FILE }}"
        if git diff --staged --quiet; then
          echo "No changes to commit"
        else
          git commit -m "Add links list for $(date +'%Y-%m-%d')"
          git push origin HEAD:${GITHUB_REF}
        fi
    
    - name: Run Link Checker
      run: python url-checker.py
      #env:
      #  START_URL: ${{ secrets.AZ_URL }}

    # Commit the report to the repository
    - name: Commit report to repository
      if: always()
      run: |
        git config --local user.email "github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"
        git add "${{ env.REPORT_FILE }}"
        if git diff --staged --quiet; then
          echo "No changes to commit"
        else
          git commit -m "Add links report for $(date +'%Y-%m-%d')"
          git push origin HEAD:${GITHUB_REF}
        fi
  
    # Upload the report as an artifact
    - name: Upload links report
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: links-report
        path: ${{ env.REPORT_FILE }}
    
    # Send email notification with the report
    - name: Send email notification
      id: send_email
      if: always()
      uses: dawidd6/action-send-mail@v3
      with:
        server_address: smtp.gmail.com
        server_port: 465
        username: ${{secrets.GMAIL_USERNAME}}
        password: ${{secrets.GMAIL_PASSWORD}}
        subject: ${{ steps.linkchecker.outputs.broken_links_found == 'true' && 'Broken External Links Found' || 'No Broken External Links Found' }}
        body: ${{ env.STATUS_MESSAGE }}
        attachments: ${{ env.REPORT_FILE }}
        to: ${{secrets.EMAIL_RECIPIENT}}
        from: Alistair Bailey ${{secrets.EMAIL_SENDER}}
        priority: normal
        secure: true
      env:
        STATUS_MESSAGE: ${{ env.STATUS_MESSAGE }}
